from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class BooksBookIdPutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title=None, author=None, published_date=None, publisher=None, price=None, genre=None, description=None):  # noqa: E501
        """BooksBookIdPutRequest - a model defined in OpenAPI

        :param title: The title of this BooksBookIdPutRequest.  # noqa: E501
        :type title: str
        :param author: The author of this BooksBookIdPutRequest.  # noqa: E501
        :type author: str
        :param published_date: The published_date of this BooksBookIdPutRequest.  # noqa: E501
        :type published_date: str
        :param publisher: The publisher of this BooksBookIdPutRequest.  # noqa: E501
        :type publisher: str
        :param price: The price of this BooksBookIdPutRequest.  # noqa: E501
        :type price: float
        :param genre: The genre of this BooksBookIdPutRequest.  # noqa: E501
        :type genre: str
        :param description: The description of this BooksBookIdPutRequest.  # noqa: E501
        :type description: str
        """
        self.openapi_types = {
            'title': str,
            'author': str,
            'published_date': str,
            'publisher': str,
            'price': float,
            'genre': str,
            'description': str
        }

        self.attribute_map = {
            'title': 'title',
            'author': 'author',
            'published_date': 'publishedDate',
            'publisher': 'publisher',
            'price': 'price',
            'genre': 'genre',
            'description': 'description'
        }

        self._title = title
        self._author = author
        self._published_date = published_date
        self._publisher = publisher
        self._price = price
        self._genre = genre
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'BooksBookIdPutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _books__bookId__put_request of this BooksBookIdPutRequest.  # noqa: E501
        :rtype: BooksBookIdPutRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this BooksBookIdPutRequest.


        :return: The title of this BooksBookIdPutRequest.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this BooksBookIdPutRequest.


        :param title: The title of this BooksBookIdPutRequest.
        :type title: str
        """

        self._title = title

    @property
    def author(self) -> str:
        """Gets the author of this BooksBookIdPutRequest.


        :return: The author of this BooksBookIdPutRequest.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author: str):
        """Sets the author of this BooksBookIdPutRequest.


        :param author: The author of this BooksBookIdPutRequest.
        :type author: str
        """

        self._author = author

    @property
    def published_date(self) -> str:
        """Gets the published_date of this BooksBookIdPutRequest.


        :return: The published_date of this BooksBookIdPutRequest.
        :rtype: str
        """
        return self._published_date

    @published_date.setter
    def published_date(self, published_date: str):
        """Sets the published_date of this BooksBookIdPutRequest.


        :param published_date: The published_date of this BooksBookIdPutRequest.
        :type published_date: str
        """

        self._published_date = published_date

    @property
    def publisher(self) -> str:
        """Gets the publisher of this BooksBookIdPutRequest.


        :return: The publisher of this BooksBookIdPutRequest.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher: str):
        """Sets the publisher of this BooksBookIdPutRequest.


        :param publisher: The publisher of this BooksBookIdPutRequest.
        :type publisher: str
        """

        self._publisher = publisher

    @property
    def price(self) -> float:
        """Gets the price of this BooksBookIdPutRequest.


        :return: The price of this BooksBookIdPutRequest.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this BooksBookIdPutRequest.


        :param price: The price of this BooksBookIdPutRequest.
        :type price: float
        """

        self._price = price

    @property
    def genre(self) -> str:
        """Gets the genre of this BooksBookIdPutRequest.


        :return: The genre of this BooksBookIdPutRequest.
        :rtype: str
        """
        return self._genre

    @genre.setter
    def genre(self, genre: str):
        """Sets the genre of this BooksBookIdPutRequest.


        :param genre: The genre of this BooksBookIdPutRequest.
        :type genre: str
        """

        self._genre = genre

    @property
    def description(self) -> str:
        """Gets the description of this BooksBookIdPutRequest.


        :return: The description of this BooksBookIdPutRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this BooksBookIdPutRequest.


        :param description: The description of this BooksBookIdPutRequest.
        :type description: str
        """

        self._description = description
