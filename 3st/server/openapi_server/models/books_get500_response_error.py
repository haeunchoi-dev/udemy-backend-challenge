from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class BooksGet500ResponseError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status=None, code=None, message=None):  # noqa: E501
        """BooksGet500ResponseError - a model defined in OpenAPI

        :param status: The status of this BooksGet500ResponseError.  # noqa: E501
        :type status: float
        :param code: The code of this BooksGet500ResponseError.  # noqa: E501
        :type code: str
        :param message: The message of this BooksGet500ResponseError.  # noqa: E501
        :type message: str
        """
        self.openapi_types = {
            'status': float,
            'code': str,
            'message': str
        }

        self.attribute_map = {
            'status': 'status',
            'code': 'code',
            'message': 'message'
        }

        self._status = status
        self._code = code
        self._message = message

    @classmethod
    def from_dict(cls, dikt) -> 'BooksGet500ResponseError':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _books_get_500_response_error of this BooksGet500ResponseError.  # noqa: E501
        :rtype: BooksGet500ResponseError
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> float:
        """Gets the status of this BooksGet500ResponseError.


        :return: The status of this BooksGet500ResponseError.
        :rtype: float
        """
        return self._status

    @status.setter
    def status(self, status: float):
        """Sets the status of this BooksGet500ResponseError.


        :param status: The status of this BooksGet500ResponseError.
        :type status: float
        """

        self._status = status

    @property
    def code(self) -> str:
        """Gets the code of this BooksGet500ResponseError.


        :return: The code of this BooksGet500ResponseError.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code: str):
        """Sets the code of this BooksGet500ResponseError.


        :param code: The code of this BooksGet500ResponseError.
        :type code: str
        """

        self._code = code

    @property
    def message(self) -> str:
        """Gets the message of this BooksGet500ResponseError.


        :return: The message of this BooksGet500ResponseError.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this BooksGet500ResponseError.


        :param message: The message of this BooksGet500ResponseError.
        :type message: str
        """

        self._message = message
